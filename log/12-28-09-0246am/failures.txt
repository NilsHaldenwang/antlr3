Tests Resulted in Failures and/or Errors[0m
Details:              [0m
From Functional Test Results:[0m
/home/kyle/lib/ruby/projects/antlr3/test/functional/tree-parser/basic.rb[0m
                      [0m
                      [0m
1) processing AST output from a parser with a tree parser(TestTreeParser2)[0m
                      [0m
╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗[0m
║                                                         Spec::Expectations::ExpectationNotMetError                                                         ║[0m
╟────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╢[0m
║ expected: "(VAR_DEF char c) (VAR_DEF int x) (FUNC_DECL (FUNC_HDR void bar (ARG_DEF int x))) (FUNC_DEF (FUNC_HDR int foo (ARG_DEF int y) (ARG_DEF char d)) (BLOCK (VAR_DEF int i) (for (= i 0) (< i 3) (= i (+ i 1)) (BLOCK (= x 3) (= y 5)))))", ║[0m
║      got: "(VAR_DEF char c) (VAR_DEF int x) (FUNC_DECL (FUNC_HDR void bar (ARG_DEF int x))) (FUNC_DEF (FUNC_HDR int foo (ARG_DEF int y) (ARG_DEF char d)) (BLOCK (VAR_DEF int i) (for i (< i 3) i (BLOCK (= x 3) (= y 5)))))" (using ==) ║[0m
╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝[0m
                      [0m
╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗[0m
║                                                             Detailed Backtrace (Last 1 Calls)                                                              ║[0m
╠═════╤══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣[0m
║  1  │ ./test/functional/tree-parser/basic.rb @ 698                                                                                                         ║[0m
╠═════╧══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣[0m
║     696 |                                                                                                                                                  ║[0m
║     697 | result = parser.program                                                                                                                          ║[0m
║ ==> 698 | result.tree.inspect.should == expected_tree                                                                                                      ║[0m
║     699 |                                                                                                                                                  ║[0m
║     700 | nodes = ANTLR3::AST::CommonTreeNodeStream.new( result.tree )                                                                                     ║[0m
╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝[0m
                      [0m
Finished in 0.212079 seconds[0m
                      [0m
18 examples, 1 failure[0m
/home/kyle/lib/ruby/projects/antlr3/test/functional/ast-output/construction.rb[0m
                      [0m
                      [0m
1) r17(TestASTConstructingParser)[0m
ANTLR3::Error::RewriteEmptyStream: rule start[0m
                      [0m
2) r24(TestASTConstructingParser)[0m
ANTLR3::Error::RewriteEmptyStream: rule r[0m
                      [0m
3) r27(TestASTConstructingParser)[0m
ANTLR3::Error::RewriteEmptyStream: rule r[0m
                      [0m
4) r34(TestASTConstructingParser)[0m
ANTLR3::Error::RewriteEmptyStream: rule sup[0m
                      [0m
5) r36(TestASTConstructingParser)[0m
ANTLR3::Error::RewriteEmptyStream: rule s1[0m
                      [0m
6) r39(TestASTConstructingParser)[0m
ANTLR3::Error::RewriteEmptyStream: rule ie[0m
                      [0m
7) r39(TestASTConstructingParser)[0m
ANTLR3::Error::RewriteEmptyStream: rule arg[0m
                      [0m
8) r39(TestASTConstructingParser)[0m
ANTLR3::Error::RewriteEmptyStream: rule p[0m
                      [0m
9) r39(TestASTConstructingParser)[0m
ANTLR3::Error::RewriteEmptyStream: rule p[0m
                      [0m
Finished in 0.207348 seconds[0m
                      [0m
78 examples, 9 failures[0m
/home/kyle/lib/ruby/projects/antlr3/test/functional/ast-output/rewrites.rb[0m
                      [0m
                      [0m
1) ref to old value(TestASTViaRewriteRules)[0m
ANTLR3::Error::RewriteEmptyStream: rule r[0m
                      [0m
2) copy rule label(TestASTViaRewriteRules)[0m
ANTLR3::Error::RewriteEmptyStream: rule x[0m
                      [0m
3) copy rule label2(TestASTViaRewriteRules)[0m
ANTLR3::Error::RewriteEmptyStream: rule x[0m
                      [0m
4) rule label(TestASTViaRewriteRules)[0m
ANTLR3::Error::RewriteEmptyStream: rule x[0m
                      [0m
5) optional(TestASTViaRewriteRules)[0m
ANTLR3::Error::RewriteEmptyStream: rule x[0m
                      [0m
6) optional2(TestASTViaRewriteRules)[0m
                      [0m
╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗[0m
║                                                         Spec::Expectations::ExpectationNotMetError                                                         ║[0m
╟────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╢[0m
║ expected: "a b",                                                                                                                                           ║[0m
║      got: "a" (using ==)                                                                                                                                   ║[0m
╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝[0m
                      [0m
╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗[0m
║                                                             Detailed Backtrace (Last 1 Calls)                                                              ║[0m
╠═════╤══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣[0m
║  1  │ ./test/functional/ast-output/rewrites.rb @ 978                                                                                                       ║[0m
╠═════╧══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣[0m
║     976 |                                                                                                                                                  ║[0m
║     977 |   END                                                                                                                                            ║[0m
║ ==> 978 |   result.should == 'a b'                                                                                                                         ║[0m
║     979 | end                                                                                                                                              ║[0m
║     980 |                                                                                                                                                  ║[0m
╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝[0m
                      [0m
7) optional3(TestASTViaRewriteRules)[0m
ANTLR3::Error::RewriteEmptyStream: rule y[0m
                      [0m
8) optional4(TestASTViaRewriteRules)[0m
ANTLR3::Error::RewriteEmptyStream: rule y[0m
                      [0m
Finished in 0.593705 seconds[0m
                      [0m
85 examples, 8 failures[0m
/home/kyle/lib/ruby/projects/antlr3/test/functional/ast-output/tree-rewrite.rb[0m
                      [0m
                      [0m
1) wildcard single node(TestASTRewritingTreeParsers)[0m
ANTLR3::Error::RewriteEmptyStream: wildcard c[0m
                      [0m
2) wildcard grabs subtree(TestASTRewritingTreeParsers)[0m
                      [0m
╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗[0m
║                                                         Spec::Expectations::ExpectationNotMetError                                                         ║[0m
╟────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╢[0m
║ expected: "(1 2 3)",                                                                                                                                       ║[0m
║      got: "2" (using ==)                                                                                                                                   ║[0m
╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝[0m
                      [0m
╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗[0m
║                                                             Detailed Backtrace (Last 1 Calls)                                                              ║[0m
╠═════╤══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣[0m
║  1  │ ./test/functional/ast-output/tree-rewrite.rb @ 1617                                                                                                  ║[0m
╠═════╧══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣[0m
║     1615 |   result = walker.s                                                                                                                             ║[0m
║     1616 |   stree = result.tree.nil? ? '' : result.tree.inspect                                                                                           ║[0m
║ ==> 1617 |   stree.should == "(1 2 3)"                                                                                                                     ║[0m
║     1618 | end                                                                                                                                             ║[0m
║     1619 |                                                                                                                                                 ║[0m
╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝[0m
                      [0m
3) wildcard grabs subtree2(TestASTRewritingTreeParsers)[0m
                      [0m
╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗[0m
║                                                         Spec::Expectations::ExpectationNotMetError                                                         ║[0m
╟────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╢[0m
║ expected: "(1 2 3)",                                                                                                                                       ║[0m
║      got: "2" (using ==)                                                                                                                                   ║[0m
╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝[0m
                      [0m
╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗[0m
║                                                             Detailed Backtrace (Last 1 Calls)                                                              ║[0m
╠═════╤══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣[0m
║  1  │ ./test/functional/ast-output/tree-rewrite.rb @ 1631                                                                                                  ║[0m
╠═════╧══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣[0m
║     1629 |   result = walker.s                                                                                                                             ║[0m
║     1630 |   stree = result.tree.nil? ? '' : result.tree.inspect                                                                                           ║[0m
║ ==> 1631 |   stree.should == "(1 2 3)"                                                                                                                     ║[0m
║     1632 | end                                                                                                                                             ║[0m
║     1633 |                                                                                                                                                 ║[0m
╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝[0m
                      [0m
Finished in 0.455314 seconds[0m
                      [0m
48 examples, 3 failures[0m
