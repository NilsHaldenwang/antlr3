Conventions For ANTLR-Generated Ruby Code

I. File Names
  
  For a lexer-only, parser-only, or tree grammar file, ``Lang.g'':
    - Lang.rb
    - Lang.tokens
  
  For a combined grammar file, ``Lang.g'':
    - LangLexer.rb
    - LangParser.rb
    - Lang.tokens

II. Primary Code Structure
  
  A. Combined Grammar ``Whatevs.g''
    module Whatevs                        # in both WhatevsLexer.rb and WhatevsParser.rb
      module TokenData (token scheme)     # in both WhatevsLexer.rb and WhatevsParser.rb
        class Token < ANTLR3::CommonToken # in both WhatevsLexer.rb and WhatevsParser.rb
      class Lexer < ANTLR3::Lexer         # in WhatevsLexer.rb
      class Parser < ANTLR3::Parser       # in WhatevsParser.rb
  
  B. Lexer Grammar ``Whatevs.g''
    module Whatevs
      module TokenData (token scheme)
        class Token < ANTLR3::CommonToken
      class Lexer < ANTLR3::Parser
  
  C. Parser Grammar ``Whatevs.g''
    module Whatevs
      module TokenData (token scheme)
        class Token < ANTLR3::CommonToken
      class Parser < ANTLR3::Parser
  
  D. ** Tree Grammar ``Whatevs.g''
    module Whatevs
      module TokenData (token scheme)
        class Token < ANTLR3::CommonToken
      class TreeParser < ANTLR3::TreeParser
    
    ** the code structure for tree grammars may be revised shortly

III. Grammar Components
  
  A. Token Types
    * token types are implemented as integer valued constants defined in token schemes
    * token schemes are modules designed to track token information for the grammar
    * the schemes are mixed into the recognizer classes
    * thus, token types are referenced directly as constants within recognizer code
    * if ANTLR defines token type ``SOME_TOKEN'' as 11, the recognizer will contain
      the constant ``SOME_TOKEN'', which will have the value 11
  
  B. Rule Methods
    * lexer rule ``RULE_NAME'' is implemented as method ``rule_name!'' in the lexer class
    * parser or tree parser rule ``rule_name'' is mapped directly to method ``rule_name'' 
      in the parser or tree parser class

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
  C. Imported Grammars
    * if a grammar ``Lang.g'' imports other grammars using the ``import XYZ;'' declaration
      within the grammar specification, ANTLR will create additional output files that
      declare additional classes 
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

