group Bytecode

program(globals,functions) ::=
<<<
.class public Wrapper
.super java/lang/Object
<%= @globals.join( "\n" ) %>
<%= @functions.join( "\n" ) %>
>>>

variable(type,name) ::= ".var is <%= @name %> <%= @type %>"

globalVariable(type,name) ::= ".field <%= @name %> <%= @type %>"

function(type,name,args,locals,stats) ::=
<<<
.method <%= @name %>(<%= @args.map { | i | i.type } %>)<%= @type %>
    <%= @locals %>
% for stat in @stats
    <%= stat %>
% end
    return
.end method
>>>

type_int() ::= "I"

type_char() ::= "C"

type_user_object( name ) ::= "L<%= @name %>;"

parameter(type,name) ::= "<%= @type %> <%= @name %>"

statement(expr) ::= "<%= @expr %>"

statementList(locals,stats) ::= <<
<%= @locals %>
<%= stats.join( "\n" ) %>
>>

forLoop(e1,e2,e3,locals,stats) ::= <<
<%= @e1 %>
start:
<%= @e2 %>
bf exit
<%= @locals %>
% for stat in @stats
<%= stat %>
% end
<%= e3 %>
goto start
exit:
>>

assign(lhs,rhs) ::= <<
<%= @rhs %>
store <%= @lhs %>
>>

equals(left,right) ::= <<
<%= @left %>
<%= @right %>
equals
>>

lessThan(left,right) ::= <<
<%= @left %>
<%= @right %>
lt
>>

add(left,right) ::= <<
<%= @left %>
<%= @right %>
add
>>

refVar(id) ::= "push <%= @id %>"

iconst(value) ::= "iconst <%= @value %>"
